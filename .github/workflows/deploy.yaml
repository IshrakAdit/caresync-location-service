name: Dockerize & Deploy to GKE

on:
  # Uncomment to enable auto-deploy on main branch push
  push:
    branches: [main]
  workflow_dispatch:

env:
  IMAGE_NAME: caresync-hub/cs-location-app
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: "17"

      - name: Make mvnw executable
        run: chmod +x ./server/mvnw

      - name: Build Spring Boot app
        run: |
          cd server
          ./mvnw clean package -DskipTests

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t myusername/caresync-hub:cs-location-app ./server
          docker push myusername/caresync-hub:cs-location-app

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: "latest"
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Authenticate kubectl
        run: |
          gcloud container clusters get-credentials ${{ secrets.K8S_CLUSTER_NAME }} \
            --zone ${{ secrets.K8S_CLUSTER_ZONE }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Create Kubernetes Secret from GitHub Secret
        run: |
          kubectl create secret generic cs-location-secrets \
            --from-literal=POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Apply Kubernetes Deployment and Service
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Update deployment image
        run: |
          kubectl set image deployment/cs-location-app \
            cs-location-app=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Wait for deployment rollout
        run: |
          kubectl rollout status deployment/cs-location-app
